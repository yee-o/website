---
import '../styles/global.css'
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Discover the future of news curation with neb.wiki, where cutting-edge language models meet traditional algorithms. Experience personalized, intelligent news recommendations tailored to your interests. Join us in redefining the way you stay informed and connected to the world.">
    <title>neb.wiki</title>
    <link rel="shortcut icon" href="favicon.svg" type="image/x-icon" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=DotGothic16&family=Long+Cang&family=Rampart+One&family=Vibes&family=Kirang+Haerang&family=Single+Day&family=Montserrat:wght@900&display=swap"
      rel="stylesheet"
    />
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/iconify/2.0.0/iconify.min.js"
      integrity="sha512-lYMiwcB608+RcqJmP93CMe7b4i9G9QK1RbixsNu4PzMRJMsqr/bUrkXUuFzCNsRUo3IXNUr5hz98lINURv5CNA=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"></script>
  </head>
  <body>
    <div class="name">neb.wiki</div>
    <main class="box">
      <div>
        <img
          src="/neb-wiki-min-removebg.png"
          width="200"
          height="200"
          alt="logo"
        />
        <span class="iconify" data-icon="bytesize:fire" data-inline="false"
        ></span>
      </div>
    </main>
  </body>

  <script>
    class TextScramble {
      private el: HTMLElement
      private chars = '!<>-_\\/[]{}—=+*^?#________'
      private queue: Array<{
        from: string
        to: string
        start: number
        end: number
        char?: string
      }> = []
      private frame = 0

      constructor(el: HTMLElement) {
        this.el = el
      }

      async setText(newText: string): Promise<void> {
        const oldText = this.el.innerText
        const length = Math.max(oldText.length, newText.length)
        this.queue = []

        for (let i = 0; i < length; i++) {
          this.queue.push({
            from: oldText[i] || '',
            to: newText[i] || '',
            start: Math.floor(Math.random() * 40),
            end: Math.floor(Math.random() * 40) + 40,
          })
        }

        this.frame = 0
        await this.update()
      }

      private async update(): Promise<void> {
        let output = ''
        let complete = 0

        for (const { from, to, start, end, char } of this.queue) {
          if (this.frame >= end) {
            complete++
            output += to
          } else if (this.frame >= start) {
            output += `<span class="dud">${char || this.randomChar()}</span>`
          } else {
            output += from
          }
        }

        this.el.innerHTML = output
        this.frame++

        if (complete < this.queue.length) {
          await new Promise((resolve) => requestAnimationFrame(resolve))
          await this.update()
        }
      }

      private randomChar(): string {
        return this.chars[Math.floor(Math.random() * this.chars.length)]
      }
    }

    const box = document.querySelector('.box') as HTMLDivElement

    setTimeout(() => {
      box.removeChild(document.querySelector('.box div'))

      const text = document.createElement('span')
      text.classList.add('glitch-text')
      box.appendChild(text)

      const ts = new TextScramble(text)

      let counter = 0
      const next = () => {
        text.style.fontFamily = fonts[phrases[counter]]
        ts.setText(phrases[counter]).then(() => {
          // setTimeout(next, 2200)
          counter++
          if (counter < phrases.length) {
            setTimeout(next, 2200)
          }
        })
        // counter = (counter + 1) % phrases.length
      }

      next()
    }, 3500)

    const phrases = ['Create', 'Créer', 'خلق', '创造', '창조하다', '創造']

    const fonts = {
      Create: 'DotGothic16',
      Créer: 'Single Day',
      خلق: 'Vibes',
      创造: 'Long Cang',
      창조하다: 'Kirang Haerang',
      創造: 'Rampart One',
    }
  </script>
</html>
